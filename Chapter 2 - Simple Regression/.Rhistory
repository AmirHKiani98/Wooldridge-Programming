?lm
regressionModel <- lm(k401$prate~k401k$mrate)
regressionModel <- lm(k401k$prate~k401k$mrate)
regressionModel
regressionModel.coefficients
attr(regressionModel,coefficients)
attributes(regressionModel)$coefficients
attributes(regressionModel)$residuals
attributes(regressionModel)$a
attributes(regressionModel)
attributes(regressionModel)$coefficients
regressionModel$coefficients
regressionModel$rank
regressionModel$effects
attributes(regressionModel)
regressionModel$residuals
)
regressionModel <- lm(k401k$prate~k401k$mrate)
attributes(regressionModel)
regressionModel$terms
regressionModel$model
regressionModel$coefficients
type(regressionModel$coefficients)
typeof(regressionModel$coefficients)
dbl_var <- c(1, 2.5, 4.5)
typeof(dbl_var)
a
a <- (regressionModel$coefficients)
a
a[1]
a[2]
a
modelEquation <- paste("prate = ", a[1] , " + " , a[2] , "mrate" , sep="")
modelEquation
modelEquation <- paste("prate = ", round(a[1],2) , " + " , round(a[2],2)
, "mrate" , sep="")
modelEquation
regressionEquation <- function(regressionModel){
beta1 = regressionModel$coefficients[1]
beta2 = regressionModel$coefficients[2]
equation <- function(value){
return(beta1 + beta2*value)
}
return(equation)
}
equation <- regressionEquation(regressionModel)
equation(3.5)
regressionEquation <- function(regressionModel){
beta1 = regressionModel$coefficients[1]
beta2 = regressionModel$coefficients[2]
equation <- function(value){
return(round(beta1 + beta2*value,2))
}
return(equation)
}
equation <- regressionEquation(regressionModel)
equation(3.5)
regressionEquation <- function(regressionModel){
beta1 = regressionModel$coefficients[1]
beta2 = regressionModel$coefficients[2]
equation <- function(value){
return(round(c(beta1 + beta2*value,2)))
}
return(equation)
}
equation <- regressionEquation(regressionModel)
equation(3.5)
regressionEquation <- function(regressionModel){
beta1 = regressionModel$coefficients[1]
beta2 = regressionModel$coefficients[2]
equation <- function(value){
return(beta1 + beta2*value)
}
return(equation)
}
equation <- regressionEquation(regressionModel)
equation(3.5)
regressionEquation <- function(regressionModel){
beta1 = regressionModel$coefficients[1]
beta2 = regressionModel$coefficients[2]
equation <- function(value){
return(beta1 + beta2*value[1])
}
return(equation)
}
equation <- regressionEquation(regressionModel)
equation(3.5)
egressionEquation <- function(regressionModel){
beta1 = regressionModel$coefficients[1]
beta2 = regressionModel$coefficients[2]
equation <- function(value){
return(beta1 + beta2*value[[1]])
}
return(equation)
}
equation <- regressionEquation(regressionModel)
equation(3.5)
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
?anova
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[1]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
sum(anova(regressionModel)[2])
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
sum(anova(regressionModel)[k401k$mrate][2])
varianceAnalysis[k401k$mrate][2]/sum(varianceAnalysis[2])
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
varianceAnalysis <- anova(regressionModel)
varianceAnalysis[k401k$mrate][2]/sum(varianceAnalysis[2])
varianceAnalysis[k401k$mrate][2
varianceAnalysis[k401k$mrate][2]
varianceAnalysis[k401k$mrate][2]
varianceAnalysis[k401k$mrate][3]
varianceAnalysis[k401k$mrate][2]
varianceAnalysis[k401k$mrate][1]
anova(regressionModel)
anova(regressionModel)[2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
varianceAnalysis <- anova(regressionModel)[2]
varianceAnalysis[k401k$mrate]
varianceAnalysis
varianceAnalysis$k401k$mrate
rownames(varianceAnalysis)
varianceAnalysis$k401k$mrate
varianceAnalysis[k401k$mrate]
varianceAnalysis[,k401k$mrate]
varianceAnalysis[k401k$mrate,]
varianceAnalysis[k401k$mrate,1]
varianceAnalysis
colnames(varianceAnalysis)
varianceAnalysis$Sum Sq
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[k401k$mrate][2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[k401k$mrate]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[k401k$mrate][2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[1][2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2][1]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2][2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2][0]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2][1]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2][k401k$mrate]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2]['k401k$mrate']
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[k401k$mrate][2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[1,2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[2,2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
anova(regressionModel)[3,2]
varianceAnalysis
varianceAnalysis[1]
varianceAnalysis[1,1]
sum(varianceAnalysis)
sum(varianceAnalysis[2][1,1])
(varianceAnalysis[2][1,1])
(varianceAnalysis[2]
varianceAnalysis[2]
# (v) - How much of the variation in prate is explained by mrate ? Is this a lot
# in your opinion?
varianceAnalysis <- anova(regressionModel)
varianceAnalysis[2]
varianceAnalysis[2][1,1]
varianceAnalysis[2][1,2]
varianceAnalysis[2][2,1]
varianceAnalysis[1,1]/sum(varianceAnalysis[2])
varianceAnalysis[1,1]
varianceAnalysis[2,1]
varianceAnalysis[3,1]
varianceAnalysis
varianceAnalysis[2][1,1]
variancePercentage
variancePercentage <- (varianceAnalysis[2][1,1]/sum(varianceAnalysis[2])) *100
variancePercentage
variancePercentage <- round((varianceAnalysis[2][1,1]/sum(varianceAnalysis[2]))
*100 ,
2)
variancePercentage
# Setting the script directory as working directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(wooldridge)
data(ceosal2)
force(ceosal2)
View(ceosal2)
write.csv(ceosal2,"CEOSAL2.csv")
# Reading the data
read.csv("CEOSAL2.csv")
View(ceosal2)
# Reading the data
ceosal2 <- read.csv("CEOSAL2.csv")
View(ceosal2)
# (i) - Find the average salary and the average tenure in the sample.
salaryAvg <- mean(ceosal2$salary)
tenAvg <- mean(ceosal2$ceoten)
# (i) - Find the average salary and the average tenure in the sample.
salaryAvg <- round(mean(ceosal2$salary)*1000,2)
tenAvg <- round(mean(ceosal2$ceoten),2)
longestTen <- max(ceosal2$ceoten)
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
firstYearCEOs <- nrows(ceosal2[ceosal2$ceoten == 0])
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
firstYearCEOs <- nrow(ceosal2[ceosal2$ceoten == 0])
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
ceosal2[ceosal2$ceoten == 0]
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
ceosal2$ceoten
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
ceosal2$ceoten == 0
ceosal2$ceoten[ceosal2$ceoten == 0]
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
firstYearCEOs <- nrow(ceosal2$ceoten[ceosal2$ceoten == 0])
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
firstYearCEOs <- length(ceosal2$ceoten[ceosal2$ceoten == 0])
longestTen <- max(ceosal2$ceoten)
# (iii) - Estimate the simple regression model log(salary) = beta0 + beta1*ceoten
# + u
ceosal2$salary
# (iii) - Estimate the simple regression model log(salary) = beta0 + beta1*ceoten
# + u
log(ceosal2$salary)
?log
# (iii) - Estimate the simple regression model log(salary) = beta0 + beta1*ceoten
# + u
log(ceosal2$salary,10)
regressionModel <- lm(logSalary~ceosal2$ceoten)
# (iii) - Estimate the simple regression model log(salary) = beta0 + beta1*ceoten
# + u
logSalary <- log(ceosal2$salary,10)
regressionModel <- lm(logSalary~ceosal2$ceoten)
regressionModel
regressionModel[1]
regressionModel[1,1]
regressionModel[1,2]
regressionModel[1]$coefficients
regressionModel[1]$coefficients[1]
a <- (regressionModel$coefficients)
modelEquation <- paste("prate = ", round(a[1],2) , " + " , round(a[2],2)
, "mrate" , sep="")
modelEquation
a <- (regressionModel$coefficients)
modelEquation <- paste("log(salary) = ", round(a[1],2) , " + " , round(a[2],2)
, "*ceoten" , sep="")
modelEquation
# Setting the script directory as working directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Reading the data
ceosal2 <- read.csv("CEOSAL2.csv")
# (i) - Find the average salary and the average tenure in the sample.
salaryAvg <- round(mean(ceosal2$salary)*1000,2)
tenAvg <- round(mean(ceosal2$ceoten),2)
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
firstYearCEOs <- length(ceosal2$ceoten[ceosal2$ceoten == 0])
longestTen <- max(ceosal2$ceoten)
# (iii) - Estimate the simple regression model log(salary) = beta0 + beta1*ceoten
# + u
logSalary <- log(ceosal2$salary)
regressionModel <- lm(logSalary~ceosal2$ceoten)
a <- (regressionModel$coefficients)
modelEquation <- paste("log(salary) = ", round(a[1],2) , " + " , round(a[2],2)
, "*ceoten" , sep="")
modelEquation
# Setting the script directory as working directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Reading the data
ceosal2 <- read.csv("CEOSAL2.csv")
# (i) - Find the average salary and the average tenure in the sample.
salaryAvg <- round(mean(ceosal2$salary)*1000,2)
tenAvg <- round(mean(ceosal2$ceoten),2)
# (ii) - How many CEOs are in their first year as CEO (that is, ceoten = 0)? What is the
# longest tenure as a CEO?
firstYearCEOs <- length(ceosal2$ceoten[ceosal2$ceoten == 0])
longestTen <- max(ceosal2$ceoten)
# (iii) - Estimate the simple regression model log(salary) = beta0 + beta1*ceoten
# + u
logSalary <- log(ceosal2$salary)
regressionModel <- lm(logSalary~ceosal2$ceoten)
a <- (regressionModel$coefficients)
modelEquation <- paste("log(salary) = ", round(a[1],2) , " + " , round(a[2],5)
, "*ceoten" , sep="")
modelEquation
regressionModel
?regressionModel
??regressionModel
?lm
regressionModel$rank
?summary
details <- summary(regressionModel)
View(details)
rSquared <- details$r.squared
# Reading the data
library(wooldridge)
data("sleep75")
# Reading the data
write.csv(sleep75, "SLEEP75.csv")
# Reading the data
sleep75 <- read.csv("SLEEP75.csv")
View(sleep75)
# Report your results in equation form along with the number of observations and
# R2 . What does the intercept in this equation mean?
regressionModel <- lm(sleep75$sleep~sleep75$totwrk)
a <- (regressionModel$coefficients)
modelEquation <- paste("sleep = ", round(a[1],2) , " + " , round(a[2],5)
, " * totwrk" , sep="")
modelEquation
# Setting the script directory as working directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Reading the data
sleep75 <- read.csv("SLEEP75.csv")
# Report your results in equation form along with the number of observations and
# R2 . What does the intercept in this equation mean?
regressionModel <- lm(sleep75$sleep~sleep75$totwrk)
a <- (regressionModel$coefficients)
modelEquation <- paste("sleep = ", round(a[1],2) , " + (" , round(a[2],5)
, ") * totwrk" , sep="")
modelEquation
details <- summary(regressionModel)
rSquared <- details$r.squared
modelEquation
rSquared
# (ii) - If totwrk increases by 2 hours, by how much is sleep estimated to fall? Do you
# find this to be a large effect?
fellSleep <- a[2]*2
fellSleep
# (ii) - If totwrk increases by 2 hours, by how much is sleep estimated to fall? Do you
# find this to be a large effect?
fellSleep <- a[2]*2*60
fellSleep
# Reading the data
library(wooldridge)
data("wage2")
write.csv(wage2,"WAGE2.csv")
# Reading the data
wage2 <- read.csv("WAGE2.csv")
# Reading the data
wage2 <- read.csv("WAGE2.csv")
View(wage2)
View(wage2)
# (i) - Find the average salary and average IQ in the sample. What is the sample standard
# deviation of IQ? (IQ scores are standardized so that the average in the population
# is 100 with a standard deviation equal to 15.)
salaryAvg <- mean(wage2$wage)
IQAvg <- mean(wage2$IQ)
?sd
IQAvg <- mean(wage2$IQ)
IQStd <- sd(wage2$IQ)
print('hi')
print("2" , "s")
salaryAvg
IQAvg
IQStd
# (ii) - Estimate a simple regression model where a one-point increase in IQ changes
# wage by a constant dollar amount. Use this model to find the predicted increase in
# wage for an increase in IQ of 15 points. Does IQ explain most of the variation in
# wage ?
regressionModel <- lm(wage2$wage~wage2$IQ)
a <- (regressionModel$coefficients)
modelEquation <- paste("wage = ", round(a[1],2) , " + (" , round(a[2],5)
, ") * IQ" , sep="")
modelEquation
modelEquation <- paste("wage = ", round(a[1],2) , " + (" , round(a[2],2)
, ") * IQ" , sep="")
modelEquation
wageChange <- a[2]* 15
modelEquation
wageChange
# (iii) - Now, estimate a model where each one-point increase in IQ has the same percent-
# age effect on wage . If IQ increases by 15 points, what is the approximate percent-
# age increase in predicted wage ?
logWage <- log(wage2$wage)
logIQ <- log(wage2$IQ)
percentageRegressionModel <- lm(logWage~logIQ)
regressionModel <- lm(logWage~logIQ)
a <- (regressionModel$coefficients)
modelEquation <- paste("log(wage) = ", round(a[1],2) , " + (" , round(a[2],2)
, ") * log(IQ)" , sep="")
wageChange <- a[2] * log(15)
modelEquation
wageChange
wageChange
salaryAvg
salaryAvg*1000
IQAvg
IQStd
# (ii) - Estimate a simple regression model where a one-point increase in IQ changes
# wage by a constant dollar amount. Use this model to find the predicted increase in
# wage for an increase in IQ of 15 points. Does IQ explain most of the variation in
# wage ?
regressionModel <- lm(wage2$wage~wage2$IQ)
a <- (regressionModel$coefficients)
modelEquation <- paste("wage = ", round(a[1],2) , " + (" , round(a[2],2)
, ") * IQ" , sep="")
wageChange <- a[2]* 15
modelEquation
details <- summary(regressionModel)
rSqaured <- details$r.squared
rSquared
rSquared <- details$r.squared
rSquared
# (iii) - Now, estimate a model where each one-point increase in IQ has the same percent-
# age effect on wage . If IQ increases by 15 points, what is the approximate percent-
# age increase in predicted wage ?
logWage <- log(wage2$wage)
logIQ <- log(wage2$IQ)
regressionModel <- lm(logWage~logIQ)
a <- (regressionModel$coefficients)
modelEquation <- paste("log(wage) = ", round(a[1],2) , " + (" , round(a[2],2)
, ") * log(IQ)" , sep="")
wageChange <- a[2] * log(15)
modelEquation
regressionModel <- lm(logWage~wage2$IQ)
a <- (regressionModel$coefficients)
modelEquation <- paste("log(wage) = ", round(a[1],2) , " + (" , round(a[2],2)
, ") * log(IQ)" , sep="")
wageChange <- a[2] * log(15)
modelEquation
modelEquation <- paste("log(wage) = ", round(a[1],2) , " + (" , round(a[2],5)
, ") * log(IQ)" , sep="")
wageChange <- a[2] * log(15)
modelEquation
rSquared
details <- summary(regressionModel)
rSquared <- details$r.squared
rSquared
wageChange
wageChange <- a[2] * log(15)
details <- summary(regressionModel)
rSquared <- details$r.squared
modelEquation
wageChange
wageChange <- a[2] *
(15)
wageChange <- a[2] * (15)
details <- summary(regressionModel)
rSquared <- details$r.squared
modelEquation
wageChange
# Reading the data
library(wooldridge)
data("rdchem")
write.csv(rdchem,"RDCHEM.csv")
rdchem <- read.csv("RDCHEM.csv")
# Reading the data
rdchem <- read.csv("RDCHEM.csv")
# Reading the data
rdchem <- read.csv("RDCHEM.csv")
View(rdchem)
# (ii) - Now, estimate the model using the data in RDCHEM.RAW. Write out the
# estimated equation in the usual form. What is the estimated elasticity of rd
# with respect to sales ? Explain in words what this elasticity means.
logRd <- log(rdchem$rd)
logSales <- log(rdchem$sales)
regressionModel <- lm(logRd~logSales)
a <- (regressionModel$coefficients)
modelEquation <- paste("log(rd) = ", round(a[1],2) , " + (" , round(a[2],5)
, ") * log(sales)" , sep="")
modelEquation
details <- summary(regressionModel)
rSquared <- details$r.squared
modelEquation
rSquared
